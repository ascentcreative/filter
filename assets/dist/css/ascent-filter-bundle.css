.filter-datatable .filter-datatable-table {
    /* display: grid; */
    /* grid-template-columns: repeat(4, 1fr); */
    /* grid-template-columns: repeat(4, minmax(100px, 1fr)); */
    width: 100%;
    /* min-width: 400px; */
}




.filter-datatable table.filter-datatable-table > thead > tr > th {
    background: white;
}

.filter-fade {
    transition: opacity 0.2s;
}

.filter-updating .filter-page, .filter-updating .filter-fade {
    opacity: 0.2;
}


/* filter UI */
th.filterable {
    position: relative;
    z-index: 100;
    background: white;
}

.filter-panel {
    display: none;
    z-index: 99;
    position: absolute;
    background: white;
    border: 1px solid #ccc;
    border-top: 0px solid;
    padding: 10px;

    text-align: left;

    left: 0;
    top: calc(100%);

    min-width: 100%;

    box-shadow: 0px 5px 5px rgba(0,0,0,0.3);
}

.text-right .filter-panel {
    left: auto;
    right: 0;
}


.filter-panel .cms-blockselect-option {
    padding: 3px 10px;
    margin-bottom: 5px;
}


.filter-datatable .sort-link::before {
    content: "\f283";
}

.filter-datatable .sort-link.sort-link-asc::before {
    content: "\f235";
}

.filter-datatable .sort-link.sort-link-desc::before {
    content: "\f229";
}

.filter-datatable .filter-toggle::before {
    content: "\f3e1";
}

.filter-datatable .filter-toggle.filter-active::before {
    content: "\f3e0";
}


.filter-display {
    border: 1px solid #ccc;
}



/* Toast Styling */
.filter-toast {
    position: relative;
    z-index: 1000;
    background-color: var(--primary);
    color: white;
}

.filter-toast .toast-body {
    padding: 0.25rem 0.5rem;
}

.toggle-switch label {
    font-size: 0.75rem;
    font-weight: 600;
}



/** spinner **/

.filter-updating .filter-page {
    position: relative;
}

.filter-updating .filter-page:after {
    content:'';
    position: absolute;
    inset: 0;
    height: 100px;
    width: 100px;
    margin: 150px auto 0;
    -webkit-animation: rotation 1s infinite linear;
    -moz-animation: rotation 1s infinite linear;
    -o-animation: rotation 1s infinite linear;
    animation: rotation 1s infinite linear;
    border-left: 6px solid rgba(0, 0, 0, .15);
    border-right: 6px solid rgba(0, 0, 0, .15);
    border-bottom: 6px solid rgba(0, 0, 0, .15);
    border-top: 6px solid rgba(0,0, 0, 1);
    border-radius: 100%;


  }
  
  @-webkit-keyframes rotation {
    from {
      -webkit-transform: rotate(0deg);
    }
    to {
      -webkit-transform: rotate(359deg);
    }
  }
  
  @-moz-keyframes rotation {
    from {
      -moz-transform: rotate(0deg);
    }
    to {
      -moz-transform: rotate(359deg);
    }
  }
  
  @-o-keyframes rotation {
    from {
      -o-transform: rotate(0deg);
    }
    to {
      -o-transform: rotate(359deg);
    }
  }
  
  @keyframes rotation {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(359deg);
    }
  }


/** :has() is not yet available in Firefox (or IE11 - but that's dead anyway) **/
/** Need to temporarily use a jQuery widget instead to upgrade UI operation **/

.filter-tags:not(:has(.badge:nth-child(2))) .toggle-switch {
    display: none;
}

.filter-tags:has(input.filter-source:placeholder-shown) > div:has(input.filter-source) {
    position: relative;
}

.filter-tags:has(input.filter-source:placeholder-shown):not(:has(.badge:nth-child(2))) > div:has(input.filter-source):after {
    content: '(Type to search)';
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    font-size: 0.8rem;
    color: #7f7f7f;
}


/* .filter-tags.show-placeholder > .filter-tags-input {
    position:relative;
}

.filter-tags.show-placeholder > .filter-tags-input:after {
    content: '(Type to search)';
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    font-size: 0.8rem;
    color: #7f7f7f;
} */

.filter-paginator ul.pagination {
    margin-bottom: 0;
    padding-bottom: 0;
}